import React, { useState } from 'react';
import {
    SafeAreaView,
    View,
    Text,
    TextInput,
    TouchableOpacity,
    ScrollView,
    StyleSheet,
    Image,
} from 'react-native';
import { Ionicons } from '@expo/vector-icons';
import { useNavigation } from '@react-navigation/native';

export default function DrugFaqScreen() {
    const navigation = useNavigation();
    const [search, setSearch] = useState('');

    const recommendedTags = [
        'ÏòàÎ∞© Ï†ëÏ¢Ö', 'Î¥ÑÏ≤† Í∞êÍ∏∞', 'ÎØ∏ÏÑ∏Î®ºÏßÄ',
        'Í≥µÎ≥µ Î≥µÏö©', 'Ï°∏Ïùå Ïú†Î∞ú ÏïΩ', 'ÌòàÎãπ ÏàòÏπò',
    ];

    const questions = [
        'üç∫ ÏïΩ Î≥µÏö© Ï§ë Ïà† ÎßàÏÖîÎèÑ Îê†Íπå?',
        'üõå Ï°∏ÏùåÏùÑ Ïú†Î∞úÌïòÎäî ÏïΩ Î¶¨Ïä§Ìä∏',
        'üëµüë∂ ÎÖ∏Ïù∏/ÏûÑÏÇ∞Î∂Ä Î≥µÏïΩ Ïãú Ïú†ÏùòÏÇ¨Ìï≠',
        'üí° Ïù¥ ÏïΩÏùÄ Ïôú Íº≠ ÏãùÌõÑÏóê Î®πÏñ¥Ïïº ÌïòÎÇòÏöî?',
        '‚òïÔ∏è ÏïΩ Î®πÍ≥† Ïª§Ìîº ÎßàÏÖîÎèÑ ÎêòÎÇòÏöî?',
        'ü©∏ ÌòàÎãπ ÏàòÏπò ÎÇÆÏùÑ Îïê ÏïΩÏùÑ Í±¥ÎÑàÎõ∞Ïñ¥ÎèÑ ÎêòÎÇòÏöî?',
        'üçù ÎãπÎá®ÏïΩ Î®πÏùÑ Îïê Ïñ¥Îñ§ ÏùåÏãù ÌîºÌï¥Ïïº ÌïòÎÇòÏöî?',
        'üìâ Îã§Ïù¥Ïñ¥Ìä∏ ÏïΩÏù¥Îûë ÎãπÎá®ÏïΩ Í∞ôÏù¥ Î≥µÏö©Ìï¥ÎèÑ ÎêòÎÇòÏöî?',
        'üîÅ ÏïΩÏùÑ Ïò§Îûò Î®πÎã§ Î≥¥Î©¥ Î™∏Ïù¥ ÎÇ¥ÏÑ±Ïù¥ ÏÉùÍ∏∞ÎÇòÏöî?',
        'üîç ÏΩúÎ†àÏä§ÌÖåÎ°§ ÎÇÆÏ∂îÎäî ÏïΩ Î®πÏùÑ Îïê Í≥ÑÎûÄÎèÑ ÌîºÌï¥Ïïº ÌïòÎÇòÏöî?',
        'üíâ ÌòàÏïïÏïΩÍ≥º ÎãπÎá®ÏïΩ Í∞ôÏù¥ Î®πÏñ¥ÎèÑ Î¨∏Ï†ú ÏóÜÎÇòÏöî?',
        'ü•õ ÌòàÏïïÏïΩ Î®πÏùÑ Îïê ÏÜåÍ∏à ÏÑ≠Ï∑®Î•º ÏñºÎßàÎÇò Ï§ÑÏó¨Ïïº ÌïòÎÇòÏöî?',
    ];

    const filtered = questions.filter(q =>
        q.toLowerCase().includes(search.toLowerCase())
    );

    return (
        <SafeAreaView style={styles.container}>
            {/* Header */}
            <View style={styles.header}>
                <TouchableOpacity onPress={() => navigation.goBack()}>
                    <Ionicons name="chevron-back" size={24} color="#000" />
                </TouchableOpacity>
                <Text style={styles.headerTitle}>üíä ÏïΩ Î≥µÏö© Í∂ÅÍ∏àÏ¶ù</Text>
                <View style={{ width: 24 }} />
            </View>

            {/* Body */}
            <ScrollView contentContainerStyle={styles.content}>
                {/* Search */}
                <View style={styles.searchBox}>
                    <Ionicons name="search-outline" size={20} color="#888" style={{ marginRight: 8 }} />
                    <TextInput
                        style={styles.searchInput}
                        placeholder="Ïñ¥Îñ§ Í≥†ÎØºÏù¥Îì† Í≤ÄÏÉâÌï¥ Î≥¥ÏÑ∏Ïöî."
                        placeholderTextColor="#888"
                        value={search}
                        onChangeText={setSearch}
                    />
                </View>

                {/* Tags */}
                <Text style={styles.sectionTitleSmall}>Ï∂îÏ≤ú Í≤ÄÏÉâÏñ¥</Text>
                <View style={styles.tagsRow}>
                    {recommendedTags.map((tag, i) => (
                        <TouchableOpacity
                            key={i}
                            style={styles.tagButton}
                            onPress={() => setSearch(tag)}
                        >
                            <Text style={styles.tagText}>{tag}</Text>
                        </TouchableOpacity>
                    ))}
                </View>

                {/* FAQ List */}
                {filtered.map((q, idx) => (
                    <TouchableOpacity
                        key={idx}
                        style={styles.faqItem}
                        onPress={() => navigation.navigate('chatbot', { question: q })}
                    >
                        <Text style={styles.faqText}>Q. {q}</Text>
                    </TouchableOpacity>
                ))}
            </ScrollView>

            {/* Floating Chatbot */}
            <TouchableOpacity
                onPress={() => navigation.navigate('chatbot')}
                style={styles.chatbotButton}
            >
                <View style={styles.chatbotCircle}>
                    <Image
                        source={require('../../assets/chatbotch.png')}
                        style={styles.chatbotImage}
                        resizeMode="contain"
                    />
                </View>
            </TouchableOpacity>
        </SafeAreaView>
    );
}

const styles = StyleSheet.create({
    container: { flex: 1, backgroundColor: '#fff' },

    header: {
        height: 56,
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'space-between',
        paddingHorizontal: 16,
        borderBottomWidth: 0.5,
        borderColor: '#eee',
    },
    headerTitle: { fontSize: 18, fontWeight: 'bold' },

    content: { padding: 16, paddingBottom: 40 },

    searchBox: {
        flexDirection: 'row',
        alignItems: 'center',
        backgroundColor: '#F2F2F8',
        borderRadius: 8,
        paddingHorizontal: 12,
        height: 40,
        marginBottom: 16,
    },
    searchInput: { flex: 1, fontSize: 14 },

    sectionTitleSmall: {
        fontSize: 14,
        color: '#666',
        marginBottom: 8,
    },
    tagsRow: {
        flexDirection: 'row',
        flexWrap: 'wrap',
        marginBottom: 24,
    },
    tagButton: {
        backgroundColor: '#F2F2F8',
        borderRadius: 16,
        paddingHorizontal: 12,
        paddingVertical: 6,
        marginRight: 8,
        marginBottom: 8,
    },
    tagText: { fontSize: 13, color: '#333' },

    faqItem: {
        paddingVertical: 12,
        borderBottomWidth: 0.5,
        borderColor: '#eee',
    },
    faqText: { fontSize: 15, color: '#333' },

    chatbotButton: {
        position: 'absolute',
        bottom: 90, // ÌïòÎã® ÌÉ≠Î∞î ÏúÑ Ïó¨Ïú†
        right: 20,
        zIndex: 100,
    },
    chatbotCircle: {
        backgroundColor: '#3C4CF1',
        borderRadius: 30,
        width: 60,
        height: 60,
        justifyContent: 'center',
        alignItems: 'center',
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.3,
        shadowRadius: 4,
        elevation: 5,
    },
    chatbotImage: {
        width: 190,
        height: 190,
        marginBottom: 5,
    },
});
